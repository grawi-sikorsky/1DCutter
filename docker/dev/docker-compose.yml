version: "3.7"

services:
  onedcutter-db:
    image: mysql:latest
    container_name: 1dcutter_db
    restart: always
    networks:
      - onedcutter_network
    ports:
      - "3306:3306"
    env_file:
      - ../../1DCutter-Back/.docker/.env
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 3

  onedcutter-back:
    build:
      context: ../../1DCutter-Back
    # image: apkatag:latest
    container_name: 1dcutter_back
    depends_on:
      - onedcutter-db
    networks:
      - onedcutter_network
    ports:
      - "8080:8080"
    environment:
      - spring.datasource.url=jdbc:mysql://onedcutter-db:3306/onedcutter
    env_file:
      - ../../1DCutter-Back/.docker/.env

  onedcutter-front:
    build: 
      context: ../../1DCutter-Front
    container_name: 1dcutter_front
    #image: 1dcutterangular
    #image: docker-angular-cutter:latest
    depends_on:
      - onedcutter-back
    networks:
      - onedcutter_network
    ports:
      - "80:80"
    volumes:
      - "/app/node_modules"
      - ".:/app"


  # nginx:
  #   container_name: endzinx
  #   image: nginx:latest
  #   restart: always
  #   ports:
  #     - "80:80"
  #   network_mode: host
  #   hostname: localhost
  #   volumes:
  #     - ./default.conf:/etc/nginx/conf.d
  #   depends_on:
  #     - applikejszyn

networks:
  onedcutter_network: